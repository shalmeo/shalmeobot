from aiogram import Dispatcher
from aiogram import types
from aiogram.dispatcher import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession

from tgbot.services.database.models import User
from tgbot.services.database.quick_commands import add_referal
from tgbot.states.enter_referal import EnterReferal
from tgbot.keyboards.reply import cancel_kb, confirm_kb
from tgbot.misc.allow_acc import allow_acces



@allow_acces()
async def enter_referal(call: types.CallbackQuery, state: FSMContext):
    await call.message.delete()
    await call.message.answer('–í–≤–µ–¥–∏—Ç–µ ID –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –≤–∞—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚úèÔ∏è\n\n'
                              '–í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É, –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤–≤–µ–¥–µ—Ç–µ ID.',
                              reply_markup=cancel_kb())
    await state.set_state(EnterReferal.enter)
    

@allow_acces()
async def confirm_referal(message: types.Message, state: FSMContext, session: AsyncSession):
    try:
        if referal := await session.get(User, int(message.text)):
            await message.answer(f'–í—ã –≤–≤–µ–ª–∏ <b>{message.text}</b>\n\n'
                                 '–ß—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ ‚úÖ –î–∞\n'
                                 '–ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ ‚ùå –ù–µ—Ç', reply_markup=confirm_kb())
            
            await state.update_data(referal_id=referal.user_id)
            await state.set_state(EnterReferal.confirm)
        else:
            await message.answer('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üòî\n'
                                 '–ü–æ–ø—ã—Ç–∞–π—Ç–µ—Å—å –≤–≤–µ—Å—Ç–∏ ID –µ—â–µ —Ä–∞–∑.\n\n'
                                 '–ß—Ç–æ–±—ã –≤—ã–π—Ç–∏ –Ω–∞–∂–º–∏—Ç–µ "–û—Ç–º–µ–Ω–∏—Ç—å"', reply_markup=cancel_kb())
    except ValueError:
        await message.answer('–ü–æ—Ö–æ–∂–µ –≤—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ üòî\n'
                             '–ü–æ–ø—ã—Ç–∞–π—Ç–µ—Å—å –≤–≤–µ—Å—Ç–∏ ID –µ—â–µ —Ä–∞–∑.\n\n'
                             '–ß—Ç–æ–±—ã –≤—ã–π—Ç–∏ –Ω–∞–∂–º–∏—Ç–µ "–û—Ç–º–µ–Ω–∏—Ç—å"', reply_markup=cancel_kb())


@allow_acces()
async def confirm(message: types.Message, state: FSMContext, session: AsyncSession, user: User):
    referal_id = (await state.get_data()).get('referal_id')
    if message.text == '‚úÖ –î–∞':
        await add_referal(session, referal_id, user)  
    
    await message.answer('–ù–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–µ.', reply_markup=types.ReplyKeyboardRemove())
    await state.finish()

    
@allow_acces()
async def cancel(message: types.Message, state: FSMContext):
    await message.answer('–ù–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–µ.', reply_markup=types.ReplyKeyboardRemove())
    await state.finish()


def setup(dp: Dispatcher):
    dp.register_callback_query_handler(enter_referal, text='enter_referal')
    dp.register_message_handler(cancel, text='–û—Ç–º–µ–Ω–∏—Ç—å', state=EnterReferal.enter)
    dp.register_message_handler(confirm_referal, state=EnterReferal.enter)
    dp.register_message_handler(confirm, state=EnterReferal.confirm)